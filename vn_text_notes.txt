*** Helpful
Trigger Auto-completion dialog: Ctrl + Space

//
close("\\Others")
Closes all images except for the front image.

*** Functions:

*** ALL image in an array: getList("image.titles");

*** Create randomized table:

// a = RandomOpenImages(nImages);
function RandomOpenImages(NumOfOpenImages) {
	OpenImages = getList("image.titles");
	IndexArray = newArray(NumOfOpenImages);
	for (i = 0; i < NumOfOpenImages; i++) {
		IndexArray[i] = i;
	}

	// Randomize IndexArray
	for (i = 0; i < NumOfOpenImages; i++) {
		RandomIndex = floor(random*NumOfOpenImages);
		temp = IndexArray[i];
		IndexArray[i] = IndexArray[RandomIndex];
		IndexArray[RandomIndex] = temp;
	}
	Table.create("RandomizedMap");
	selectWindow("RandomizedMap");
	for (i = 0; i < NumOfOpenImages; i++) {
		nRow = Table.size;
		Table.set("PreRan", i, i);
		Table.set("PostRan", i, IndexArray[i]);
		Table.set("ImageName", i, OpenImages[IndexArray[i]]);
	}
	return IndexArray;
}

*** OverlayText
text = "2sa min";
setFont("SansSerif", 50, " antialiased");
makeText(text, 1150, 350);
run("Add Selection...", "stroke=yellow");
run("Select None");


***Slices & Composite
nSlices
setSlice(1)
for (j=1; j<=nImages; j++) {selectImage(j);setSlice(1);};
setSlice(2)
Stack.setDisplayMode("composite");

for (j=1; j<=nImages; j++) {selectImage(j);Stack.setDisplayMode("composite");};

for (j=1; j<=nImages; j++) {selectImage(j);Stack.setDisplayMode("color");};


***LOOP ALL:***
- General: 
for (j=1; j<=nImages; j++) {selectImage(j);<CODE>};
- Measure: 
for (j=1; j<=nImages; j++) {selectImage(j);run("Measure");};
- Threshold: 
for (j=1; j<=nImages; j++) {selectImage(j);setAutoThreshold("Huang dark");};
- ResetThreshold: 
for (j=1; j<=nImages; j++) {selectImage(j);resetThreshold();};


- Save ROis SAME NAME / + 1 / + 2 / + 3
for (j=1; j<=nImages; j++) {selectImage(j);roiCount=roiManager("count");roiManager("Add");roiManager("Select",roiCount);roiManager("Rename", getTitle());};
for (j=1; j<=nImages; j++) {selectImage(j);roiCount=roiManager("count");roiManager("Add");roiManager("Select",roiCount);roiManager("Rename", getTitle() + "_" + "1");};
for (j=1; j<=nImages; j++) {selectImage(j);roiCount=roiManager("count");roiManager("Add");roiManager("Select",roiCount);roiManager("Rename", getTitle() + "_" + "2");};
for (j=1; j<=nImages; j++) {selectImage(j);roiCount=roiManager("count");roiManager("Add");roiManager("Select",roiCount);roiManager("Rename", getTitle() + "_" + "3");};

- Match & Select ROIs SAME NAME / + 1 / + 2 / + 3:
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle(); roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { break;}}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_1"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { break;}}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_2"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { break;}}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_3"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { break;}}};
  + Match & Select ROIs, and Measure:
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle(); roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { run("Measure"); }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_1"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { run("Measure"); break; }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_2"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { run("Measure"); break; }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_3"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { run("Measure"); break; }}};
  + Match & Select ROIs, Otsu, and Measure:
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle(); roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { setAutoThreshold("Otsu dark");run("Measure");  break; }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_1"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { setAutoThreshold("Otsu dark");run("Measure");  break; }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_2"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { setAutoThreshold("Otsu dark");run("Measure");  break; }}};
for (j=1; j<=nImages; j++) {selectImage(j);imageName = getTitle() + "_3"; roiCount = roiManager("count"); for (i = 0; i < roiCount; i++) { roiManager("Select", i); roiName = Roi.getName(); if (roiName == imageName) { setAutoThreshold("Otsu dark");run("Measure");  break; }}};

*** INDIVIDUAL ***:
//// ROIs = name + 1,2,3,....
roiCount = roiManager("count");
roiManager("Add");
roiManager("Select", roiCount);
baseName = getTitle();
newName = baseName;
suffix = 1;
// Use a for loop to iterate over existing ROIs
for (i = 0; i < roiCount; i++) {
    roiManager("Select", i);
    roiName = Roi.getName();
    // Check if the current ROI name matches the newName
    if (roiName == newName) {
        // If there's a match, generate a new name by adding a suffix
        newName = baseName + "_" + suffix;
        suffix++;
        // Reset the loop to start checking again from the first ROI
        i = -1;  // i will become 0 after the increment, restarting the loop
    }
}
// Finally, rename the ROI to the new unique name
roiManager("Select", roiCount);
roiManager("Rename", newName);


*** RESULTS TABLE ***:
getResult("Column", row): ONLY NUMERIC MEASUREMENTS
- 0 <= row < nResults. Default Row = nResults-1 (last row)

getResultString("Column", row): FOR STRING

getResultLabel(row): FOR LABEL Columns

Table.deleteRows(nResults-1, nResults-1); DELETE THE LAST ROW (from nResults-1 to nResults-1)

getValue("results.count"): number of counts in a table. WORK WITH TABLES NOT NAMED "Results"

setResult("Column", row, value) or setResult("Label", row, string) (for string)
- 0<=row<=nResults. So a row is added if row = nResults


FUNCTIONS:
function InitialLog() {
	// Date and Times
	MonthNames = newArray("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
	DayNames = newArray("Sun", "Mon","Tue","Wed","Thu","Fri","Sat");
	getDateAndTime(year, month, dayOfWeek, dayOfMonth, hour, minute, second, msec);
	TimeString =DayNames[dayOfWeek]+" ";
	if (dayOfMonth<10) {TimeString = TimeString+"0";}
	TimeString = TimeString+dayOfMonth+"-"+MonthNames[month]+"-"+year+", ";
	if (hour<10) {TimeString = TimeString+"0";}
	TimeString = TimeString+hour+":";
	if (minute<10) {TimeString = TimeString+"0";}
	TimeString = TimeString+minute+":";
	if (second<10) {TimeString = TimeString+"0";}
	TimeString = TimeString+second;
	print("=== " + TimeString);
	
	// Image infomation
	print(getDirectory("image")+getTitle());
	getPixelSize(unit, pxW, pxH);
	print("Pixel Width = " + pxW + ", Height = " + pxH + " " + unit);	
	}